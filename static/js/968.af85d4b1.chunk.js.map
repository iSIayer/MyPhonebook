{"version":3,"file":"static/js/968.af85d4b1.chunk.js","mappings":"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","sources":["components/Pages/ContactsPage/ContactsPage.styled.js","components/Container/Container.jsx","components/Input/Input.styled.js","components/Input/Input.jsx","components/Form/Form.styled.js","components/Form/Form.jsx","components/Contacts/ContactsList.styled.js","components/Contacts/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport contactBg from 'components/img/contactBackground.jpg';\n\nexport const MainContainer = styled.div`\n  background: linear-gradient(\n      335deg,\n      rgba(9, 5, 47, 0.2) 0%,\n      rgba(49, 29, 94, 0.2) 100%\n    ),\n    url(${contactBg});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  width: 100%;\n  overflow-y: scroll;\n  max-height: calc(100vh - 56px - 62px);\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding-top: 65px;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const Label = styled.h2`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const InputIn = styled.input`\n  padding: 5px;\n  min-width: 280px;\n  background-color: rgba(255, 255, 255, 0.4);\n  box-shadow: 2px 2px 23px 9px rgba(0, 0, 0, 0.2);\n  border: none;\n  border-radius: 5px;\n`;\n\nexport const InputContainer = styled.div`\n  margin-bottom: 20px;\n`;\n","import { Label, InputIn, InputContainer } from './Input.styled';\n\nconst Input = ({\n  title,\n  type,\n  name,\n  value,\n  placeholder,\n  pattern,\n  onChange,\n}) => {\n  return (\n    <InputContainer>\n      <Label>{title}</Label>\n      <InputIn\n        type={type}\n        name={name}\n        key={name}\n        value={value}\n        onChange={onChange}\n        pattern={pattern}\n        placeholder={placeholder}\n        autoComplete=\"off\"\n        required\n      />\n    </InputContainer>\n  );\n};\n\nexport default Input;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 0;\n  width: 450px;\n  border-radius: 7px;\n  color: #000;\n  background-color: rgba(244, 244, 246, 0.4);\n  box-shadow: 2px 2px 23px 9px rgba(0, 0, 0, 0.39);\n\n  @media screen and (max-width: 479px) {\n    max-width: 300px;\n  }\n`;\n\nexport const Button = styled.button.attrs(() => ({\n  type: 'submit',\n}))`\n  position: relative;\n  margin-top: 20px;\n  padding: 5px 10px;\n  display: inline-flex;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: color 500ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #212529;\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  useGetContactByNameQuery,\n  useAddContactMutation,\n} from 'components/api/phonebookApi';\nimport PhoneInput from 'react-phone-number-input';\nimport { LineWave } from 'react-loader-spinner';\nimport { motion } from 'framer-motion';\nimport { toast } from 'react-toastify';\nimport 'react-phone-number-input/style.css';\nimport Input from 'components/Input';\nimport { FormContainer, Button } from './Form.styled';\n\nconst Form = () => {\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: items } = useGetContactByNameQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    if (number.length > 13) {\n      return alert('Введіть корректний номер телефону!');\n    }\n\n    const checkName = items.find(el => el.name === name);\n\n    checkName === undefined\n      ? addContact({ name, number })\n      : toast.error(`${name} вже є в телефонній книзі!.`, {\n          position: toast.POSITION.TOP_CENTER,\n          theme: 'dark',\n        });\n\n    e.preventDefault();\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <motion.div\n      initial={{ y: -100, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.9, delay: 0.5 }}\n    >\n      <FormContainer onSubmit={handleSubmit}>\n        <Input\n          onChange={handleInputChange}\n          title=\"Моя телефонна книга\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Тарас Шевченко\"\n        />\n        <PhoneInput\n          defaultCountry=\"UA\"\n          onChange={number => {\n            setNumber(number);\n          }}\n          region=\"Europe\"\n          title=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"Введіть номер контакту\"\n          autoComplete=\"off\"\n          international\n          className=\"inputPhone\"\n          maxLength=\"16\"\n        />\n        <Button disabled={isLoading} onSubmit={handleSubmit}>\n          {isLoading && <LineWave height=\"16\" width=\"16\" color=\"#fff\" />}\n          Додати контакт\n        </Button>\n      </FormContainer>\n    </motion.div>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const ContainerList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 15px;\n  text-transform: uppercase;\n`;\n\nexport const Title = styled.h2`\n  color: #000;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const AttentionText = styled.span`\n  color: red;\n  display: inline-block;\n  margin-top: 10px;\n  font-size: 22px;\n`;\n\nexport const ContactListButton = styled.button.attrs(() => ({\n  type: 'button',\n}))`\n  padding: 5px 7px;\n  background-color: transparent;\n  color: red;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  useGetContactByNameQuery,\n  useDeleteContactMutation,\n} from 'components/api/phonebookApi';\nimport { getFilter } from 'redux/contacts/contactsSlice';\nimport Table from 'react-bootstrap/Table';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ContainerList,\n  Title,\n  ContactListButton,\n  AttentionText,\n} from './ContactsList.styled';\nimport { motion } from 'framer-motion';\nimport { MdDeleteSweep } from 'react-icons/md';\n\nconst ContactsList = () => {\n  const filter = useSelector(getFilter);\n  const { data = [], isLoading } = useGetContactByNameQuery();\n  const [onClickDelete] = useDeleteContactMutation();\n\n  const dataFilter = () => {\n    return data.filter(item => item.name.toLowerCase().includes(filter));\n  };\n\n  let contacts = filter === '' ? data : dataFilter();\n\n  return (\n    <motion.div\n      initial={{ y: 300, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.9, delay: 0.6 }}\n    >\n      <ContainerList>\n        <Title>Контакти</Title>\n        {isLoading && <Loader />}\n        {data.length > 0 ? (\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Ім'я контакту</th>\n                <th>Номер контакту</th>\n                <th>Видалити</th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.map(({ id, name, number }) => (\n                <tr key={id} className=\"text\">\n                  <td>{name}</td>\n                  <td>{number}</td>\n                  <td>\n                    <ContactListButton onClick={() => onClickDelete(id)}>\n                      <MdDeleteSweep size={20} />\n                    </ContactListButton>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        ) : (\n          <AttentionText>У Вас ще немає контактів :(</AttentionText>\n        )}\n      </ContainerList>\n    </motion.div>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  name: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onClickDelete: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport Container from 'components/Container';\n\nexport const SearchContainer = styled(Container)`\n  margin: 20px 0;\n  padding: 10px 0;\n  border-radius: 7px;\n  width: 450px;\n  color: #000;\n  background-color: rgba(244, 244, 246, 0.4);\n  box-shadow: 2px 2px 23px 9px rgba(0, 0, 0, 0.39);\n  @media screen and (max-width: 479px) {\n    max-width: 300px;\n  }\n`;\n\nexport const SearchTitle = styled.h2`\n  font-size: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  text-align: center;\n  margin-top: 10px;\n  padding: 5px;\n  border: none;\n  border-radius: 5px;\n  opacity: 0.4;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { filter, getFilter } from 'redux/contacts/contactsSlice';\nimport { SearchContainer, SearchTitle, Input } from './Filter.styled';\nimport { motion } from 'framer-motion';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const handleItemsFilter = e => {\n    dispatch(filter(e.currentTarget.value.toLocaleLowerCase().trim()));\n  };\n\n  return (\n    <motion.div\n      initial={{ x: -200, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      transition={{ duration: 0.9, delay: 0.5 }}\n    >\n      <SearchContainer>\n        <SearchTitle>Пошук контакту за ім'ям</SearchTitle>\n        <Input\n          type=\"text\"\n          value={value}\n          onChange={handleItemsFilter}\n          placeholder=\"Знайти контакт\"\n        />\n      </SearchContainer>\n    </motion.div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport authSelectors from 'redux/auth/auth-selector';\nimport { useGetContactByNameQuery } from 'components/api/phonebookApi';\nimport { MainContainer } from './ContactsPage.styled';\nimport Container from 'components/Container';\nimport Form from 'components/Form';\nimport List from 'components/Contacts';\nimport Filter from 'components/Filter';\n\nconst ContactsPage = () => {\n  const { data } = useGetContactByNameQuery();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <MainContainer>\n      <Container>\n        <Form />\n        {isLoggedIn && data && (data.length > 1 ? <Filter /> : '')}\n        <List />\n      </Container>\n    </MainContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["MainContainer","styled","contactBg","Label","InputIn","InputContainer","title","type","name","value","placeholder","pattern","onChange","autoComplete","required","FormContainer","Button","useAddContactMutation","addContact","isLoading","items","useGetContactByNameQuery","data","useState","setName","number","setNumber","handleSubmit","e","length","alert","undefined","find","el","toast","position","theme","preventDefault","reset","motion","initial","y","opacity","animate","transition","duration","delay","onSubmit","currentTarget","defaultCountry","region","international","className","maxLength","disabled","height","width","color","ContainerList","Title","AttentionText","ContactListButton","filter","useSelector","getFilter","useDeleteContactMutation","onClickDelete","contacts","item","toLowerCase","includes","Loader","Table","striped","bordered","hover","map","id","onClick","size","SearchContainer","Container","SearchTitle","Input","dispatch","useDispatch","x","toLocaleLowerCase","trim","isLoggedIn","authSelectors"],"sourceRoot":""}